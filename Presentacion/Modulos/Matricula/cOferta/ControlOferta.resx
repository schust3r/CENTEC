<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnInfoVentana.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>